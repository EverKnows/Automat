<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hdu.automat.dal.mapper.ChannelMapper">

    <resultMap id="BaseResultMap" type="com.hdu.automat.dal.entity.ChannelDTO">
        <!--@Table t_channel-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="subId" column="sub_id" jdbcType="INTEGER"/>
        <result property="deviceId" column="device_id" jdbcType="INTEGER"/>
        <result property="itemName" column="item_name" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="INTEGER"/>
        <result property="size" column="size" jdbcType="INTEGER"/>
        <result property="stock" column="stock" jdbcType="INTEGER"/>
    </resultMap>
    
    
    <sql id="Base_Column_List">
        id ,
        sub_id ,
        device_id ,
        item_name ,
        price ,
        size ,
        stock ,
    </sql>
    
    <sql id="TABLE_NAME">
        t_channel
    </sql>

    <!--查询单个-->
    <select id="loadById" resultMap="BaseResultMap">
        select
          <include refid="Base_Column_List"/>

        from <include refid="TABLE_NAME"/>
        where id = #{id} and is_deleted = 0
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into <include refid="TABLE_NAME"/> (sub_id, device_id, item_name, price, size, stock)
        values (#{subId}, #{deviceId}, #{itemName}, #{price}, #{size}, #{stock})
    </insert>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from <include refid="TABLE_NAME"/> where id = #{id}
    </delete>


    <select id="batchLoadBySubId" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from
            <include refid="TABLE_NAME"/>
        where
            device_id = #{deviceId}
    </select>

    <update id="updateStock">
        update from
            <include refid="TABLE_NAME"/>
        set
            stock = #{newStock}
        where
            device_id = #{id}

    </update>
</mapper>